name: Build with Maven and generate Docker Image and deploy it

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    tags: ['v*']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: sneyx/medibook-backend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set permissions for private key
        run: |
          echo ${{ secrets.AWS_PRIVATE_KEY }} > key.pem
          chmod 600 key.pem
      - name: Pull Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.196.13.40 'sudo docker pull sneyx/medibook-backend:latest'
      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.196.13.40 'sudo docker stop medibook-backend || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.196.13.40 'sudo docker rm medibook-backend || true'
      - name: Run new container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@54.196.13.40 'sudo docker run -d - name medibook-backend -p 80:8090 sneyx/medibook-backend:latest'
          
        
